{"version":3,"sources":["shapes/TabShape.js","components/Tab/Tab.js","components/Tabs/Tabs.js","shapes/TabsShape.js","App.js","index.js"],"names":["TabShape","PropTypes","shape","title","string","isRequired","onTabSelected","func","Tab","type","className","onClick","Tabs","tabs","arrayOf","index","number","state","tabContent","props","content","setState","this","map","key","PureComponent","preparedData","tab","App","ReactDOM","render","document","getElementById"],"mappings":"oOAEaA,EAAWC,IAAUC,MAAM,CACtCC,MAAOF,IAAUG,OAAOC,WACxBC,cAAeL,IAAUM,KAAKF,aAC7BA,WCFUG,EAAM,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAOG,EAAV,EAAUA,cAAV,OACjB,4BACEG,KAAK,SACLC,UAAU,uBACVC,QAASL,GAERH,ICLQS,GCDYX,IAAUC,MAAM,CACvCW,KAAMZ,IAAUa,QAAQd,GAAUK,WAClCU,MAAOd,IAAUe,OAAOX,aACvBA,WDFH,4MACEY,MAAQ,CACNC,WAAY,EAAKC,MAAMN,KAAK,EAAKM,MAAMJ,OAAOK,SAFlD,EAKEd,cAAgB,SAACc,GACf,EAAKC,SAAS,CACZH,WAAYE,KAPlB,uDAWY,IAAD,OACCP,EAASS,KAAKH,MAAdN,KACAK,EAAeI,KAAKL,MAApBC,WAER,OACE,yBAAKR,UAAU,gBACb,6BACE,wBAAIA,UAAU,4BAEVG,EAAKU,KAAI,gBAAGpB,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,QAASL,EAAnB,EAAmBA,MAAnB,OACP,wBAAIS,IAAKT,GACP,kBAAC,EAAD,CACEZ,MAAOA,EACPG,cAAe,kBAAM,EAAKA,cAAcc,YAOpD,uBAAGV,UAAU,sBAAb,mBAEgBQ,SAjCxB,GAA0BO,kBEiBpBC,G,MAfO,CACX,CACEvB,MAAO,QACPiB,QAAS,eAEX,CACEjB,MAAO,QACPiB,QAAS,eAEX,CACEjB,MAAO,QACPiB,QAAS,gBAIaG,KAAI,SAACI,EAAKZ,GAAN,mBAAC,eAC1BY,GADyB,IAE5BZ,cAcaa,EAXH,kBACV,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,SAAd,cAEA,kBAAC,EAAD,CACEG,KAAMa,EACNX,MAAO,MC5Bbc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.bc53b25c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const TabShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  onTabSelected: PropTypes.func.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { TabShape } from '../../shapes/TabShape';\n\nexport const Tab = ({ title, onTabSelected }) => (\n  <button\n    type=\"button\"\n    className=\"ui green active item\"\n    onClick={onTabSelected}\n  >\n    {title}\n  </button>\n);\n\nTab.propTypes = TabShape;\n","import React, { PureComponent } from 'react';\nimport { Tab } from '../Tab/Tab';\nimport { TabsShape } from '../../shapes/TabsShape';\n\nexport class Tabs extends PureComponent {\n  state = {\n    tabContent: this.props.tabs[this.props.index].content,\n  }\n\n  onTabSelected = (content) => {\n    this.setState({\n      tabContent: content,\n    });\n  }\n\n  render() {\n    const { tabs } = this.props;\n    const { tabContent } = this.state;\n\n    return (\n      <div className=\"ui container\">\n        <div>\n          <ul className=\"ui attached tabular menu\">\n            {\n              tabs.map(({ title, content, index }) => (\n                <li key={index}>\n                  <Tab\n                    title={title}\n                    onTabSelected={() => this.onTabSelected(content)}\n                  />\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n        <p className=\"ui segment content\">\n          {\n            `Content: ${tabContent}`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n\nTabs.propTypes = TabsShape;\n","import PropTypes from 'prop-types';\nimport { TabShape } from './TabShape';\n\nexport const TabsShape = PropTypes.shape({\n  tabs: PropTypes.arrayOf(TabShape).isRequired,\n  index: PropTypes.number.isRequired,\n}).isRequired;\n","import React from 'react';\nimport './App.css';\n\nimport { Tabs } from './components/Tabs/Tabs';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst tabs = [\n  {\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nconst preparedData = tabs.map((tab, index) => ({\n  ...tab,\n  index,\n}));\n\nconst App = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">React tabs</h1>\n\n    <Tabs\n      tabs={preparedData}\n      index={0}\n    />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}